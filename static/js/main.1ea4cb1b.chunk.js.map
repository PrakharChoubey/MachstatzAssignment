{"version":3,"sources":["components/Field.js","components/UserInput.js","components/UserCard.js","components/UsersGrid.js","components/collapse.js","App.js","reportWebVitals.js","index.js"],"names":["Field","label","props","useField","field","meta","className","Form","Group","Label","htmlFor","name","Control","touched","error","placeholder","value","id","role","toast","configure","UserInput","state","email","title","User","fist_name","last_name","pwd","username","handleSubmit","e","addNewUser","validate","Yup","firstName","max","required","lastName","test","allUsers","filter","user","length","password","min","initialValues","this","validationSchema","onSubmit","formik","dis","first_name","type","Select","disabled","Button","variant","Component","GridUser","useState","show","setShow","handleClose","Col","lg","md","xs","Card","bg","style","width","Header","Modal","onHide","closeButton","Body","Footer","onClick","xmlns","height","fill","viewBox","d","clickHandler","backgroundColor","color","i","Math","floor","random","getRandomColor","charAt","toUpperCase","Title","Users","deleteUser","em","getUserEmail","Container","Row","map","Udata","index","key","Collapse1","toggle","React","createRef","scroll","open","ms","Promise","resolve","setTimeout","ref","a","timeout","window","scrollTo","current","offsetTop","setState","prevState","scrollToRef","Collapse","in","children","URL","App","setUsers","retrieveAllUsers","axios","get","response","data","post","then","res","console","log","message","catch","err","success","position","POSITION","TOP_RIGHT","removeUserHandler","delete","params","warn","TOP_LEFT","newUsers","useEffect","XallUsers","getAllUsers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ea4cb1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {ErrorMessage, useField } from 'formik';\r\nimport { Form } from 'react-bootstrap'\r\n\r\n\r\nexport const Field = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <div className=\"mb-2\">\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor={field.name}>{label}</Form.Label>\r\n                <Form.Control  className={`form-control ${meta.touched && meta.error && 'is-invalid'}`}\r\n                    {...field} {...props}\r\n                        placeholder={\"Enter Your \" + label} value={props.value} />\r\n                <div id='Custom-alert' className={`${meta.touched && meta.error && 'alert alert-danger'}`}><ErrorMessage className=\"alert alert-danger\" role=\"alert\" name={field.name}></ErrorMessage></div>\r\n                </Form.Group>\r\n               \r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Field } from './Field';\r\nimport { Formik, Form } from 'formik';\r\nimport { Form as FM, Button } from 'react-bootstrap';\r\nimport '../css/CustomForm.css';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nclass UserInput extends Component {\r\n    state = {\r\n        email: this.props.title ? this.props.User.email : \"\",\r\n        fist_name: this.props.title ? this.props.User.fist_name : \"\",\r\n        last_name: this.props.title ? this.props.User.last_name : \"\",\r\n        pwd: this.props.title ? this.props.User.pwd : \"\",\r\n        username: this.props.title ? this.props.User.username : \"\"\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        // e.preventDefault();\r\n        this.props.addNewUser(e);\r\n\r\n    }\r\n\r\n    validate = Yup.object({\r\n        firstName: Yup.string().max(20, \"Must be 20 characters or less\").required('This is a Required field'),\r\n        lastName: Yup.string().max(20, \"Must be 20 characters or less\").required('This is a Required field'),\r\n        username: Yup.string().max(15, \"Must be 20 characters or less\").required('This is a Required field'),\r\n        email: Yup.string().email('Email is Invalid').required('Email is Required').test('unique', 'Email already exist', (e) => {\r\n            if (!this.props.title) {\r\n                return (this.props.allUsers.filter((user) => {\r\n                    return user.email === e\r\n                }).length === 1 ? false : true)\r\n            } else {return true}\r\n            \r\n        }),\r\n        password: Yup.string().min(5, \"Password Must be atleast 5 characters or more\").required('Password is required')\r\n    })\r\n    render() {\r\n        return (\r\n            <Formik\r\n                // initialValues={{\r\n                //     firstName: \"\",\r\n                //     lastName: \"\",\r\n                //     username: \"\",\r\n                //     email: \"\",\r\n                //     password: \"\"\r\n                // }}\r\n                initialValues={this.state}\r\n                validationSchema={this.validate}\r\n                onSubmit={e => this.handleSubmit(e)}\r\n            >\r\n                {formik => (\r\n                    <div className=\"Custom_form \">\r\n                        <h1 className=\" font-weight-bold-display-4\">{this.props.title ? this.props.title : \"Add New User\"}</h1>\r\n                        <hr />\r\n                        <Form>\r\n                            <Field id={this.props.dis && \"disabled\"}\r\n                                value={this.props.title && (this.state.fist_name || this.props.User.first_name) }\r\n                                label=\"First Name\" name=\"firstName\" type=\"text\"  className=\"disabled\"/>\r\n                            <Field id={this.props.dis && \"disabled\"}\r\n                                value={this.props.title && this.state.last_name}\r\n                                label=\"Last Name\" name=\"lastName\" type=\"text\"  />\r\n                            <Field id={this.props.dis && \"disabled\"}\r\n                                value={ this.props.title && this.state.username}\r\n                                label=\"User Name\" name=\"username\" type=\"text\"  />\r\n                            <FM.Label>Profiles</FM.Label>\r\n                            <FM.Select className=\"mb-3\" id=\"dis\" disabled><option>Select</option></FM.Select>\r\n                            <Field id={this.props.dis ? \"disabled\" : \"formBasicEmail\"}\r\n                                value={this.props.title && this.state.email}\r\n                                label=\"Email\" name=\"email\" type=\"text\"  />\r\n                            <Field id={this.props.dis ? \"disabled\" : \"formBasicPassword\" }\r\n                                value={this.props.title && this.state.pwd}\r\n                                label=\"Password\" name=\"password\" type=\"password\" />\r\n                            <Button className={`btn btn-dark mt-3 mr-6 ${this.props.dis ? 'd-none' : ''}`} variant=\"primary\" type=\"submit\">Submit</Button>\r\n                            \r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </Formik >\r\n        );\r\n    }\r\n}\r\nexport default UserInput;\r\n","import { Card, Col} from 'react-bootstrap';\r\nimport '../css/StyleCard.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport UserInput from './UserInput';\r\n\r\ntoast.configure();\r\nconst GridUser = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => { setShow(true); };\r\n    const getRandomColor = () => {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    return (\r\n        <Col lg={3} md={4} xs={6}>\r\n            <Card bg='info' className=\"mb-3 custom_grid\" style={{ width: '14.8rem' }}>\r\n                <Card.Header>\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            {/* <Modal.Title>Edit User Detail</Modal.Title> */}\r\n                        </Modal.Header>\r\n                        <Modal.Body><UserInput User={{...props}} title=\"Edit User Detail\" dis={true} /></Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                            <Button variant=\"primary\" className=\"disabled\" onClick={handleClose}>Save Changes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <span id=\"Icon\" title=\"Edit\" onClick = { handleShow }>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"17\" fill=\"currentColor\" className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n                        </svg>\r\n                    </span>\r\n                    <span id=\"Icon\" title=\"Delete\" onClick={() => props.clickHandler(props.email)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"20\" fill=\"currentColor\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\r\n                    </svg></span>\r\n                </Card.Header>\r\n                <Card.Body className=\"custom_card_body\">\r\n                    <div className=\"avatar-circle\" style={{ backgroundColor: getRandomColor() }}>\r\n                        <span className=\"initials\">{props.first_name ?\r\n                            props.first_name.charAt(0).toUpperCase() :\r\n                            props.fist_name ? props.fist_name.charAt(0).toUpperCase() : '?'}\r\n                        </span>\r\n                    </div>\r\n                    <Card.Title id=\"cardTitle\">{props.fist_name || props.first_name + \" \" + props.last_name} </Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n        //     </Row>\r\n        // </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default GridUser;","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport GridUser from './UserCard';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n\r\ntoast.configure();\r\nfunction Users(props){\r\n    const deleteUser=(em)=>{\r\n        props.getUserEmail(em);\r\n    }\r\n \r\n        return <Container className=\"mt-4\">\r\n            <Row>\r\n                {props.allUsers.map((Udata,index)=>{\r\n                    \r\n                    return (<GridUser clickHandler={deleteUser} {...Udata} key={index}/>)\r\n                })}\r\n            </Row>\r\n        </Container>\r\n}\r\n\r\nexport default Users;","import React, { Component } from 'react';\r\nimport { Collapse, Button } from 'react-bootstrap';\r\n\r\n\r\nclass Collapse1 extends Component {\r\n    // toggle = React.createRef();\r\n     \r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = React.createRef();\r\n        this.scroll = React.createRef();\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    timeout(ms){\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    async scrollToRef(ref){ await this.timeout(350);window.scrollTo(0, this.toggle.current.offsetTop) };\r\n    render() {\r\n        return (\r\n            <div ref={this.toggle} className=\" mt-5 d-flex flex-column flex-wrap align-content-center\" >\r\n                <Button id=\"add_id\"\r\n                    \r\n                    onClick={() => {\r\n                        this.setState(prevState => ({\r\n                            open: !prevState.open\r\n                        }));\r\n                        // console.log(\"----------\");\r\n                        this.scrollToRef(this.scroll);\r\n                    }}\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={this.state.open} >{this.state.open ? 'X' :'+ Add New User'}</Button>\r\n                <Collapse in={this.state.open}>\r\n                    <div id=\"example-collapse-text\" ref={this.scroll}>{this.props.children}</div>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Collapse1;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Users from './components/UsersGrid';\nimport Collapse1 from './components/collapse';\nimport { Row } from 'react-bootstrap';\nimport UserInput from './components/UserInput';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst URL = \"http://15.207.229.231:8000/machstatz\";\n\nfunction App() {\n  const [allUsers, setUsers] = useState([]);\n  const retrieveAllUsers = async () => {\n    const response = await axios.get(`${URL}/get_all_users`);\n    return response.data;\n  }\n  const addNewUser = async (User) => {\n    const user = {\n      email: User.email,\n      fist_name: User.firstName,\n      last_name: User.lastName,\n      pwd: User.password,\n      username: User.username\n    }\n    axios.post(`${URL}/add_new_user`, user).then(res => {\n      console.log(\"Response message\", res.data.message);\n    }).catch(err => err);\n    toast.success(`New User Added - ${user.fist_name}`, { position: toast.POSITION.TOP_RIGHT });\n    window.scrollTo(0, 0);\n    setUsers([...allUsers, user]);\n  };\n\n  const removeUserHandler = async (email) => {\n    await axios.delete(`${URL}/delete_existing_user`, { params: { email: email } }).catch(err => err);\n    toast.warn('Deleted', { position: toast.POSITION.TOP_LEFT });\n    const newUsers = allUsers.filter((user) => {\n      return user.email !== email;\n    });\n\n    setUsers(newUsers);\n  };\n  useEffect(() => {\n    const getAllUsers = async () => {\n      const XallUsers = await retrieveAllUsers();\n      if (XallUsers) setUsers(XallUsers);\n    };\n    getAllUsers();\n  }, []);\n\n  useEffect(() => {\n  }, [allUsers]);\n\n  return (\n    <div className=\"container mt-3 \">\n      <Row>\n        <Users\n          allUsers={allUsers}\n          getUserEmail={removeUserHandler}\n        />\n      </Row>\n      <Row>\n        <Collapse1>\n          <UserInput allUsers={allUsers} addNewUser={addNewUser}/>\n        </Collapse1>\n      </Row>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}